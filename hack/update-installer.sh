#!/bin/bash -e

#
# Copyright 2019 IBM Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Combine all the operator related yamls in the deploy
# folder into one file.

CURRENT_PATH=$(dirname "$BASH_SOURCE")
DEPLOY_PATH=$CURRENT_PATH/../deploy
CRD_PATH=$DEPLOY_PATH/crds

TARGET_FILE_NAME=ibm-block-csi-operator.yaml
TARGET_FILE=$DEPLOY_PATH/installer/generated/$TARGET_FILE_NAME

excluded_files=("csi_driver.yaml" $TARGET_FILE_NAME)

function contains()
{
    local i
    for i in "${@:2}"
	do
        [[ "$i" == "$1" ]] && return 0;  # 0 is true
    done
    return 1  # 1 is false
}

echo "generate operator installer"

printf  "# Code generated by update-copyright.sh. DO NOT EDIT.\n\n" > $TARGET_FILE

for file_name in $(ls $CRD_PATH)
do
    file=$CRD_PATH/$file_name
    if test -f $file
    then
        if [[ $file == *_crd.yaml ]]
        then
            cat $file >> $TARGET_FILE
            printf "\n---\n" >> $TARGET_FILE
        else
            echo "skip $file_name"
        fi
    else
        echo "skip $file_name, it is not a file"
    fi
done

for file_name in $(ls $DEPLOY_PATH)
do
    file=$DEPLOY_PATH/$file_name
    if test -f $file
    then
        if !(contains $file_name "${excluded_files[@]}")
        then
            cat $file >> $TARGET_FILE
            printf "\n---\n" >> $TARGET_FILE
        else
            echo "skip $file_name"
        fi
    else
        echo "skip $file_name, it is not a file"
    fi
done

# delete the last "---"
os=`uname`
# arch=`uname -i`

if [[ $os == "Darwin" ]]
then
    sed -i '' -e '$d' $TARGET_FILE
    sed -i '' -e '$d' $TARGET_FILE
elif [[ $os == "Linux" ]]
then
    sed -i '$d' $TARGET_FILE
    sed -i '$d' $TARGET_FILE
fi
