
name: operator-bundle-and-catalog-builder-ci
on:
  push:
      branches:
        - operator_buider_ci_add_bundle
  pull_request:
  workflow_dispatch:
    inputs:
      production:
        description: 'Click the checkbox for production image'
        default: false
        type: boolean
        required: false
env:
  IMAGE_VERSION: 'v0.9.1'
jobs:
  prepare_env:
    name: "Prepare env"
    runs-on: ubuntu-latest
    env:
      PRODUCTION: "${{ inputs.production }}"
      BUILD_NUMBER: "${{ github.run_number }}"
      GITHUB_SHA: "${{ github.sha }}"
      OPERATOR_PROD_REPOSITORY: csiblock/ibm-block-csi-operator
      OPERATOR_STAGING_REPOSITORY: csiblock/ibm-block-csi-operator-staging
      BUNDLE_OPERATOR_PROD_REPOSITORY: csiblock/ibm-block-csi-operator-bundle
      BUNDLE_OPERATOR_STAGING_REPOSITORY: csiblock/ibm-block-csi-operator-bundle-staging
      CATALOG_OPERATOR_PROD_REPOSITORY: csiblock/ibm-block-csi-operator-catalog-source
      CATALOG_OPERATOR_STAGING_REPOSITORY: csiblock/ibm-block-csi-operator-catalog-source
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.2.0
      - name: Setup dependencies
        id: setup_dependencies
        run: |
          build/ci/github_actions/setup_ci_dependencies.sh
    outputs:
      operator_repository: "${{ steps.setup_dependencies.outputs.operator_repository }}"
      bundle_repository: "${{ steps.setup_dependencies.outputs.bundle_repository }}"
      catalog_repository: "${{ steps.setup_dependencies.outputs.catalog_repository }}"
      specific_tag: "${{ steps.setup_dependencies.outputs.specific_tag }}"
      global_tag: "${{ steps.setup_dependencies.outputs.global_tag }}"

#================================================================================================
#================================================================================================
#
#  build_and_push_multiarch_operator_image:
#    name: "build and push operator image"
#    runs-on: ubuntu-latest
#    env:
#      REGISTRY: quay.io
#    needs:
#      - prepare_env
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3.2.0
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.operator_repository }}
#          tags: |
#            type=raw,value=${{ needs.prepare_env.outputs.global_tag }}
#            type=raw,value=${{ needs.prepare_env.outputs.specific_tag }}
#          labels: |
#            commit=${{ github.sha }}
#      - name: Login to quay.io
#        uses: docker/login-action@v2
#        with:
#          registry: quay.io
#          username: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_USERNAME }}'
#          password: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_PASSWORD }}'
#
#      - name: replace operator image path in csv
#        run: |
#          IMAGES1="Image\: registry.connect.redhat.com\/ibm\/ibm-block-csi-operator\:1.12.0"
#          IMAGES2="Image\: ${{ env.REGISTRY }}\/${{ needs.prepare_env.outputs.operator_repository }}\:${{ needs.prepare_env.outputs.specific_tag }}"
#          IMAGES3="deploy/olm-catalog/ibm-block-csi-operator/1.12.0/manifests/ibm-block-csi-operator.clusterserviceversion.yaml"
#          cat $IMAGES3 | grep images:
#          sed -i "s|$IMAGES1|$IMAGES2|g" "$IMAGES3"
#          IMAGES1="image\: registry.connect.redhat.com\/ibm\/ibm-block-csi-operator\:1.12.0"
#          sed -i "s|$IMAGES1|$IMAGES2|g" "$IMAGES3"
#          cat $IMAGES3 | grep images:
#
#      - name: Build and push operator image
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          platforms: linux/amd64,linux/ppc64le,linux/s390x
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          file: build/Dockerfile.operator
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          build-args: |
#            VERSION: ${{ env.IMAGE_VERSION }}
#            BUILD_NUMBER: ${{ github.run_number }}
#
#      - name: show chosen image
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.operator_repository }}:${{ needs.prepare_env.outputs.specific_tag }}
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.operator_repository }}:${{ needs.prepare_env.outputs.global_tag }}
#      - name: save image names
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.operator_repository }} >> /tmp/operator_images.txt
#          echo ${{ needs.prepare_env.outputs.specific_tag }} >> /tmp/operator_images.txt
#          echo ${{ needs.prepare_env.outputs.global_tag }} >> /tmp/operator_images.txt
#      - uses: actions/upload-artifact@v3
#        with:
#          name: images
#          path: /tmp/operator_images.txt
#          retention-days: 90
#
##================================================================================================
#
#  build_and_push_multiarch_bundle_image:
#    name: "build and push operator bundle image"
#    runs-on: ubuntu-latest
#    needs: build_and_push_multiarch_operator_image
#    env:
#      REGISTRY: quay.io
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3.2.0
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.bundle_repository }}
#          tags: |
#            type=raw,value=${{ needs.prepare_env.outputs.global_tag }}
#            type=raw,value=${{ needs.prepare_env.outputs.specific_tag }}
#          labels: |
#            commit=${{ github.sha }}
#      - name: Login to quay.io
#        uses: docker/login-action@v2
#        with:
#          registry: quay.io
#          username: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_USERNAME }}'
#          password: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_PASSWORD }}'
#
#      - name: build and push operator bundle image
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          platforms: linux/amd64,linux/ppc64le,linux/s390x
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          file: deploy/olm-catalog/ibm-block-csi-operator/1.12.0/bundle-1.12.0.Dockerfile
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          build-args: |
#            VERSION: ${{ env.IMAGE_VERSION }}
#            BUILD_NUMBER: ${{ github.run_number }}
#      - name: show chosen image
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.bundle_repository }}:${{ needs.prepare_env.outputs.specific_tag }}
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.bundle_repository }}:${{ needs.prepare_env.outputs.global_tag }}
#      - name: save image names
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.bundle_repository }} >> /tmp/bundle_images.txt
#          echo ${{ needs.prepare_env.outputs.specific_tag }} >> /tmp/bundle_images.txt
#          echo ${{ needs.prepare_env.outputs.global_tag }} >> /tmp/bundle_images.txt
#      - uses: actions/upload-artifact@v3
#        with:
#          name: images
#          path: /tmp/bundle_images.txt
#          retention-days: 90

#================================================================================================

  build_and_push_multiarch_catalog_image:
    name: "build and push operator catalog image"
    runs-on: ubuntu-latest
#    needs: build_and_push_multiarch_bundle_image
    env:
      REGISTRY: quay.io
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.catalog_repository }}
          tags: |
            type=raw,value=${{ needs.prepare_env.outputs.global_tag }}
            type=raw,value=${{ needs.prepare_env.outputs.specific_tag }}
          labels: |
            commit=${{ github.sha }}
      - name: Login to quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_USERNAME }}'
          password: '${{ secrets.CSIBLOCK_DOCKER_REGISTRY_PASSWORD }}'

      - name: run build opeartor catalog script
        run: |
          DEFAULT_IMAGE_TAG="DEFAULT_IMAGE_TAG="+${{ needs.prepare_env.outputs.global_tag }}
          DEFAULT_IMAGE_TAG_PATH="hack/common.sh"
          echo $DEFAULT_IMAGE_TAG >> $DEFAULT_IMAGE_TAG_PATH
          cat $DEFAULT_IMAGE_TAG_PATH
#          cat $DEFAULT_IMAGE_TAG_PATH | grep DEFAULT_IMAGE_TAG
#          DEFAULT_IMAGE_TAG1="DEFAULT_IMAGE_TAG=\"1.12.0\""
#          cat hack/common.sh | grep DEFAULT_IMAGE_TAG
#          sed -i "s|DEFAULT_IMAGE_TAG\=|DEFAULT_IMAGE_TAG\=${{ needs.prepare_env.outputs.global_tag }}|g" hack/common.sh
#          cat hack/common.sh | grep DEFAULT_IMAGE_TAG


#          make build-catalog
#          cat ibm-block-csi-catalog/ibm-block-csi-operator/index.yaml
#          cat ibm-block-csi-catalog.Dockerfile

#      - name: build and push operator catalog image
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          platforms: linux/amd64,linux/ppc64le,linux/s390x
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          file: deploy/olm-catalog/ibm-block-csi-operator/1.12.0/ibm-block-csi-operator.Dockerfile
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          build-args: |
#            VERSION: ${{ env.IMAGE_VERSION }}
#            BUILD_NUMBER: ${{ github.run_number }}
#      - name: show chosen image
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.catalog_repository }}:${{ needs.prepare_env.outputs.specific_tag }}
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.catalog_repository }}:${{ needs.prepare_env.outputs.global_tag }}
#      - name: save image names
#        run: |
#          echo ${{ env.REGISTRY }}/${{ needs.prepare_env.outputs.catalog_repository }} >> /tmp/catalog_images.txt
#          echo ${{ needs.prepare_env.outputs.specific_tag }} >> /tmp/catalog_images.txt
#          echo ${{ needs.prepare_env.outputs.global_tag }} >> /tmp/catalog_images.txt
#      - uses: actions/upload-artifact@v3
#        with:
#          name: images
#          path: /tmp/catalog_images.txt
#          retention-days: 90
